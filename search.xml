<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>常用 LaTeX 公式符号</title>
    <url>/637/</url>
    <content><![CDATA[<h2 id="希腊字符">希腊字符</h2>
<p><span class="math inline">\(\theta\)</span></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\theta</span><br></pre></td></tr></table></figure>
<h2 id="空格">空格</h2>
<p><span class="math inline">\(1 \ 2\)</span></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 \ 2</span><br></pre></td></tr></table></figure>
<h2 id="删除线">删除线</h2>
<p><del>abc</del></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\sout &#123;abc&#125;</span><br></pre></td></tr></table></figure>
<p>单斜线</p>
<p><span class="math inline">\(\cancel {abc}\)</span></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\cancel &#123;abc&#125;</span><br></pre></td></tr></table></figure>
<p>反斜线 backslash</p>
<p><span class="math inline">\(\bcancel {abc}\)</span></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\bcancel &#123;abc&#125;</span><br></pre></td></tr></table></figure>
<p>双斜线</p>
<p><span class="math inline">\(\xcancel {abc}\)</span></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\xcancel &#123;abc&#125;</span><br></pre></td></tr></table></figure>
<h2 id="乘号">乘号</h2>
<p><strong>Q: latex 点乘 表示?</strong></p>
<p><span class="math inline">\(1 \cdot 2\)</span> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 \cdot 2</span><br></pre></td></tr></table></figure>
<!--SR:!2022-11-21,61,210--></p>
<p><strong>Q: latex 叉乘表示?</strong></p>
<p><span class="math inline">\(1 \times 2\)</span> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 \times 2</span><br></pre></td></tr></table></figure>
<!--SR:!2022-10-15,54,230--></p>
<h2 id="除号-divide">除号 divide</h2>
<p><strong>Q: latex 除法表示?</strong></p>
<p><span class="math inline">\(1 \div 2\)</span> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 \div 2</span><br></pre></td></tr></table></figure>
<!--SR:!2023-01-21,127,250--></p>
<h2 id="下标-上标">下标 上标</h2>
<p><strong>Q: latex 的下标表示?</strong></p>
<p><span class="math inline">\(v_a\)</span> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">v_a</span><br></pre></td></tr></table></figure>
<!--SR:!2022-11-15,88,270--></p>
<p><strong>Q: latex 的上标表示?</strong></p>
<p><span class="math inline">\(v^{21}\)</span> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">v^&#123;21&#125;</span><br></pre></td></tr></table></figure>
<!--SR:!2022-10-25,71,250--></p>
<h2 id="根号">根号</h2>
<p><span class="math inline">\(\sqrt{3}\)</span></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\sqrt&#123;3&#125;</span><br></pre></td></tr></table></figure>
<p><span class="math inline">\(\sqrt[3]{9}\)</span></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\sqrt[3]&#123;9&#125;</span><br></pre></td></tr></table></figure>
<h2 id="不等于-not-equal-to">不等于 not equal to</h2>
<p><span class="math inline">\(1\neq 0\)</span></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$\neq 0$$</span><br></pre></td></tr></table></figure>
<h2 id="分号-fraction">分号 fraction</h2>
<p><strong>Q: latex 的分数表示?</strong></p>
<p><span class="math inline">\(\frac{1}{2}\)</span> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\frac&#123;1&#125;&#123;2&#125;</span><br></pre></td></tr></table></figure>
<!--SR:!2022-12-12,76,246--></p>
<h2 id="省略号">省略号</h2>
<p>水平</p>
<p><span class="math inline">\(\cdots\)</span></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\cdots</span><br></pre></td></tr></table></figure>
<p>垂直</p>
<p><span class="math inline">\(\vdots\)</span></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\vdots</span><br></pre></td></tr></table></figure>
<p>倾斜</p>
<p><span class="math inline">\(\ddots\)</span></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\ddots</span><br></pre></td></tr></table></figure>
<h2 id="约等于">约等于</h2>
<p><span class="math inline">\(\approx\)</span></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\approx</span><br></pre></td></tr></table></figure>
<h2 id="ln">ln</h2>
<p><span class="math inline">\(\ln n\)</span></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\ln n</span><br></pre></td></tr></table></figure>
<h2 id="大括号-brace">大括号 brace</h2>
<p><span class="math inline">\(\{ \}\)</span></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\&#123; \&#125;</span><br></pre></td></tr></table></figure>
<p><span class="math inline">\(\underbrace {123}_{456}\)</span></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\underbrace &#123;123&#125;_&#123;456&#125;</span><br></pre></td></tr></table></figure>
<p><span class="math inline">\(\overbrace {123}^{456}\)</span></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\overbrace &#123;123&#125;^&#123;456&#125;</span><br></pre></td></tr></table></figure>
<h2 id="矩阵">矩阵</h2>
<p><strong>Q: latex 的矩阵表示?</strong></p>
<p><span class="math display">\[
\begin{vmatrix}
  1 &amp; 2 &amp; 3 \\
  4 &amp; 5 &amp; 6
\end{vmatrix}
\]</span> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\begin&#123;vmatrix&#125;</span><br><span class="line">  1 &amp; 2 &amp; 3 \\</span><br><span class="line">  4 &amp; 5 &amp; 6</span><br><span class="line">\end&#123;vmatrix&#125;</span><br></pre></td></tr></table></figure> <!--SR:!2022-10-21,69,250--></p>
<p><span class="math display">\[
\begin{vmatrix}
  1 &amp; 4 \\
  2 &amp; 5 \\
  3 &amp; 6
\end{vmatrix}
\]</span> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\begin&#123;vmatrix&#125;</span><br><span class="line">  1 &amp; 4 \\</span><br><span class="line">  2 &amp; 5 \\</span><br><span class="line">  3 &amp; 6 </span><br><span class="line">\end&#123;vmatrix&#125;</span><br></pre></td></tr></table></figure> <strong>Q: latex 的矩阵表示?</strong></p>
<p>圆括号 (parentheses) <span class="math display">\[
\begin{pmatrix}
  1 &amp; 2 \\
  3 &amp; 4
\end{pmatrix}
\]</span> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\begin&#123;pmatrix&#125;</span><br><span class="line">  1 &amp; 2 \\</span><br><span class="line">  3 &amp; 4</span><br><span class="line">\end&#123;pmatrix&#125;</span><br></pre></td></tr></table></figure> <!--SR:!2023-03-02,146,250--></p>
<p><strong>Q: latex 的矩阵表示?</strong></p>
<p>中括号 (square brackets) <span class="math display">\[
\begin{bmatrix}
  1 &amp; 2 \\
  3 &amp; 4
\end{bmatrix}
\]</span> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\begin&#123;bmatrix&#125;</span><br><span class="line">  1 &amp; 2 \\</span><br><span class="line">  3 &amp; 4</span><br><span class="line">\end&#123;bmatrix&#125;</span><br></pre></td></tr></table></figure> <!--SR:!2022-11-19,78,230--></p>
<p><strong>Q: latex 的矩阵表示?</strong></p>
<p>双竖线 (double vertical lines) <span class="math display">\[
\begin{Vmatrix}
  1 &amp; 2 \\
  3 &amp; 4
\end{Vmatrix}
\]</span> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\begin&#123;Vmatrix&#125;</span><br><span class="line">  1 &amp; 2 \\</span><br><span class="line">  3 &amp; 4</span><br><span class="line">\end&#123;Vmatrix&#125;</span><br></pre></td></tr></table></figure> <!--SR:!2023-01-25,123,250--></p>
<h2 id="向量">向量</h2>
<p><strong>Q: latex 的向量表示?</strong></p>
<p><strong>单个字符</strong> <span class="math display">\[\vec
a\]</span> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\vec a</span><br></pre></td></tr></table></figure> <!--SR:!2022-11-13,88,270--></p>
<p><strong>Q: latex 的向量表示?</strong></p>
<p><strong>多个字符</strong> <span
class="math display">\[\overrightarrow{ab}\]</span> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\overrightarrow&#123;ab&#125;</span><br></pre></td></tr></table></figure> <span
class="math display">\[\overleftarrow{ab}\]</span> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\overleftarrow&#123;ab&#125;</span><br></pre></td></tr></table></figure>
<!--SR:!2023-02-19,130,230--></p>
<h2 id="单位向量">单位向量</h2>
<p><span class="math inline">\(\hat{ab}\)</span></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\hat&#123;ab&#125;</span><br></pre></td></tr></table></figure>
<h2 id="求和运算">求和运算</h2>
<p><strong>Q: latex 的求和符号表示?</strong></p>
<p><span class="math inline">\(\sum_{i=1}^{n}\)</span> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\sum_&#123;i&#x3D;1&#125;^&#123;n&#125;</span><br></pre></td></tr></table></figure>
<!--SR:!2022-10-28,73,250--></p>
<h2 id="对齐">对齐</h2>
<p><strong>Q: latex 的对齐符号?</strong></p>
<p><span class="math display">\[\begin{aligned}
a &amp;= b + c &amp; = d \\
   &amp;= d &amp; = e    
\end{aligned}\]</span> &amp; 表示对齐位置, 同一行可以有多个 &amp;
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\begin&#123;aligned&#125;</span><br><span class="line">a &amp;&#x3D; b + c &amp; &#x3D; d \\</span><br><span class="line">   &amp;&#x3D; d &amp; &#x3D; e    </span><br><span class="line">\end&#123;aligned&#125;</span><br></pre></td></tr></table></figure> <!--SR:!2023-01-10,114,250--></p>
<h2 id="注释">注释</h2>
<p><span class="math inline">\(\text{注释}\)</span></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\text&#123;注释&#125;</span><br></pre></td></tr></table></figure>
<h2 id="箭头">箭头</h2>
<h3 id="右箭头">右箭头</h3>
<p>latex 中可以输入上下方文字的右箭头，用
<code>\xrightarrow[下方公式]&#123;上方公式&#125;</code> 写出，如下：</p>
<p><span class="math inline">\(a \rightarrow b\)</span> <span
class="math inline">\(a \Rightarrow b\)</span> <span
class="math inline">\(\xrightarrow[下方公式]{上方公式}\)</span>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ a \rightarrow b $</span><br><span class="line">$ a \Rightarrow b $</span><br><span class="line">$ \xrightarrow[下方公式]&#123;上方公式&#125; $</span><br></pre></td></tr></table></figure> <!--SR:!2022-10-26,14,247--></p>
<h3 id="左箭头">左箭头</h3>
<p>latex 中可以输入上下方文字的右箭头，用
<code>\xleftarrow[下方公式]&#123;上方公式&#125;</code> 写出，如下：</p>
<p><span class="math inline">\(a \leftarrow b\)</span> <span
class="math inline">\(a \Leftarrow b\)</span> <span
class="math inline">\(\xleftarrow[上方公式]{下方公式}\)</span><br />
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ a \leftarrow b $</span><br><span class="line">$ a \Leftarrow b $</span><br><span class="line">$ \xleftarrow[上方公式]&#123;下方公式&#125; $  </span><br></pre></td></tr></table></figure> <!--SR:!2022-10-13,6,247--></p>
<h3 id="双向箭头">双向箭头</h3>
<p><span class="math inline">\(a \leftrightarrow b\)</span> <span
class="math inline">\(a \Leftrightarrow b\)</span> <span
class="math inline">\(a \xLeftrightarrow[下]{上} b\)</span>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$a \leftrightarrow b$</span><br><span class="line">$a \Leftrightarrow b$</span><br><span class="line">$a \xLeftrightarrow[下]&#123;上&#125; b$</span><br></pre></td></tr></table></figure> <!--SR:!2022-10-13,6,247--></p>
<h2 id="加减-减加">加减 减加</h2>
<p><span class="math inline">\(\pm\)</span> <span
class="math inline">\(\mp\)</span> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ \pm $</span><br><span class="line">$ \mp $</span><br></pre></td></tr></table></figure>
<!--SR:!2022-10-26,14,247--></p>
<h2 id="希腊字母">希腊字母</h2>
<p><span class="math inline">\(\delta\)</span> <span
class="math inline">\(\Delta\)</span> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$\delta$</span><br><span class="line">$\Delta$</span><br></pre></td></tr></table></figure>
<!--SR:!2022-10-13,6,247--></p>
<h2 id="自动调整括号大小">自动调整括号大小</h2>
<p><span class="math display">\[\left \{  
  \frac{1}{2}
  \left [
    \left (
      a + b
    \right )
  \right ]
\right \}\]</span></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\left \&#123;  </span><br><span class="line">  \frac&#123;1&#125;&#123;2&#125;</span><br><span class="line">  \left [</span><br><span class="line">    \left (</span><br><span class="line">      a + b</span><br><span class="line">    \right )</span><br><span class="line">  \right ]</span><br><span class="line">\right \&#125;</span><br></pre></td></tr></table></figure>
<h2 id="参考">参考</h2>
<p><a
href="https://www.quora.com/How-do-I-write-vectors-and-matrices-in-mathrm-LaTeX">https://www.quora.com/How-do-I-write-vectors-and-matrices-in-mathrm-LaTeX</a></p>
<p><a
href="https://tex.stackexchange.com/questions/28608/how-to-add-a-matrix-to-a-latex-document">math
mode - How to add a matrix to a LaTeX document - TeX - LaTeX Stack
Exchange</a></p>
<p><a
href="https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols">List of
LaTeX mathematical symbols - OeisWiki</a></p>
<p><a href="http://mohu.org/info/symbols/symbols.htm">常用数学符号的
LaTeX 表示方法</a></p>
<p><a
href="https://blog.csdn.net/foreverdengwei/article/details/8189243">latex
中括号大小控制_Cloud-Datacenter-Renewable Energy-Big Data-Model-CSDN
博客</a></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.4.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.4.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>5.工具</category>
        <category>效率</category>
        <category>Obsidian</category>
      </categories>
      <tags>
        <tag>srcard</tag>
        <tag>latex</tag>
      </tags>
  </entry>
  <entry>
    <title>test_note1</title>
    <url>/1177/</url>
    <content><![CDATA[<h1 id="双链测试笔记-1">双链测试笔记 1</h1>
<p><a href="../1176/#公式">Obsidian+Hexo Markdown 测试</a></p>
<p><a href="../1178/#Branch%202">test_note2</a></p>
<p><a href="../1180">test_note2</a></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.4.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.4.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>9.输出</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>test</tag>
        <tag>obsidian</tag>
        <tag>markdown</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>test_note2</title>
    <url>/1180/</url>
    <content><![CDATA[<h1 id="双链测试笔记-3">双链测试笔记 3</h1>
<p>双链测试笔记 3 和 双链测试笔记 2 同名, 用于测试同名笔记的双链解析</p>
<p><a href="../1176/#链接">Obsidian+Hexo Markdown 测试</a></p>
<p><a href="../1177">test_note1</a></p>
<p><a href="../1178/#Branch%202">test_note2</a></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.4.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.4.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>9.输出</category>
        <category>hexo</category>
        <category>deep</category>
      </categories>
      <tags>
        <tag>test</tag>
        <tag>obsidian</tag>
        <tag>markdown</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>test_note2</title>
    <url>/1178/</url>
    <content><![CDATA[<h1 id="双链测试笔记-2">双链测试笔记 2</h1>
<p><a href="../1176/#图表">Obsidian+Hexo Markdown 测试</a></p>
<p><a href="../1177">test_note1</a></p>
<p><a href="../1180">test_note2</a></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.4.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.4.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>9.输出</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>test</tag>
        <tag>obsidian</tag>
        <tag>markdown</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Obsidian+Hexo Markdown 测试</title>
    <url>/1176/</url>
    <content><![CDATA[<h1 id="双链测试">双链测试</h1>
<p><a href="../1177">test_note1</a></p>
<p><a href="../1178">test_note2</a></p>
<p><a href="../1180">test_note2</a></p>
<h1 id="markdown-示例">Markdown 示例</h1>
<p>Markdown简易入门教程<br />
使用方式：打开 Source Mode 就可以看到所有markdown格式，照着来用就行了  
 </p>
<h2 id="标题">标题</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 标题一</span><br><span class="line">## 标题二</span><br><span class="line">### 标题三</span><br><span class="line">#### 标题四</span><br><span class="line">##### 标题五</span><br><span class="line">###### 标题六</span><br></pre></td></tr></table></figure>
<h2 id="文本">文本</h2>
<p><strong>粗体</strong></p>
<blockquote>
<p>引用</p>
</blockquote>
<p><del>中划线</del></p>
<p><u>下划线</u></p>
<hr />
<p><mark style="background: #fefe00A6;">三空格+换行＝换行</mark>  </p>
<p><em>斜体</em></p>
<p><strong><em>斜体加粗体</em></strong></p>
<p><strong>常用markdown标记?</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">**粗体**   </span><br><span class="line"></span><br><span class="line">&gt; 引用   </span><br><span class="line"></span><br><span class="line">~~中划线~~   </span><br><span class="line"></span><br><span class="line">&lt;u&gt;下划线&lt;/u&gt; </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">三空格+换行＝换行   </span><br><span class="line"></span><br><span class="line">*斜体*   </span><br><span class="line"></span><br><span class="line">***斜体加粗体***   </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<!--SR:!2022-11-16,64,250-->
<h2 id="段落">段落</h2>
<h3 id="链接">链接</h3>
<p><a href="https://gitee.com/qiaogaojian">链接</a><br />
<a href="/download/ide-eval-resetter.zip">ide-eval-resetter.zip</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[链接](链接地址)  </span><br><span class="line">[[obsidian双链]]</span><br></pre></td></tr></table></figure>
<h3 id="图片">图片</h3>
<p><img src="/images/Pasted%20image%2020221009213236.png" /> <img
src="/images/0-2.png" /> <img
src="https://upload-images.jianshu.io/upload_images/3947109-1c9256e2c1f95874.png"
alt="image.png" /> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![](远程图片地址)</span><br><span class="line">![[obsidian 图片]]</span><br><span class="line">![](obsidian 本地图片名字)</span><br></pre></td></tr></table></figure></p>
<h3 id="代码">代码</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWord</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;HelloWord&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="表格">表格</h3>
<table>
<thead>
<tr class="header">
<th>标题1</th>
<th>标题2</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>行 1 列 1</td>
<td>行 1 列 2</td>
</tr>
<tr class="even">
<td>行 2 列 1</td>
<td>行 2 列 2</td>
</tr>
</tbody>
</table>
<p><strong>markdown 表格标记</strong><br />
??<br />
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">| 标题1     | 标题2     |</span><br><span class="line">| --------- | --------- |</span><br><span class="line">| 行 1 列 1 | 行 1 列 2 |</span><br><span class="line">| 行 2 列 1 | 行 2 列 2 |</span><br></pre></td></tr></table></figure> <!--SR:!2022-08-19,10,250--></p>
<h3 id="公式">公式</h3>
<p><strong>数学公式</strong><br />
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="formula">$y = x^2$</span></span><br></pre></td></tr></table></figure> <span class="math inline">\(y=x^2\)</span></p>
<blockquote>
<p>注: Latex语法参考[[常用 LaTeX 公式符号]]</p>
</blockquote>
<h2 id="列表">列表</h2>
<h3 id="无序">无序</h3>
<ul>
<li>普通序列
<ul>
<li>1
<ul>
<li>a</li>
<li>b</li>
<li>c</li>
</ul></li>
<li>2</li>
<li>3</li>
</ul></li>
<li>普通序列</li>
<li>普通序列</li>
<li>普通序列</li>
</ul>
<h3 id="有序">有序</h3>
<ol type="1">
<li>数字序列</li>
<li>数字序列</li>
<li>数字序列</li>
<li>数字序列</li>
</ol>
<h3 id="混合">混合</h3>
<ul>
<li>混合序列
<ul>
<li>混合序列</li>
<li>混合序列</li>
<li>混合序列</li>
<li>混合序列</li>
</ul></li>
<li>混合序列</li>
<li>混合序列
<ol type="1">
<li>混合序列</li>
<li>混合序列</li>
<li>混合序列</li>
<li>混合序列</li>
</ol></li>
<li>混合序列</li>
</ul>
<h3 id="任务">任务</h3>
<p><strong>任务列表</strong><br />
??<br />
- [ ] 未完成<br />
- [x] 已完成<br />
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- [ ] 未完成   </span><br><span class="line">- [x] 已完成   </span><br></pre></td></tr></table></figure> <!--SR:!2022-08-16,7,250--></p>
<h2 id="图表">图表</h2>
<p><strong>mermaid 流程图</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A--&gt;B</span><br><span class="line">B--&gt;c</span><br></pre></td></tr></table></figure>
<pre class="mermaid">graph LR
A-->B
B-->c</pre>
<!--SR:!2022-11-07,57,250-->
<p><strong>mermaid 顺序图</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">A-&gt;&gt;B: How are you?</span><br><span class="line">B-&gt;&gt;A: Great!</span><br></pre></td></tr></table></figure>
<pre class="mermaid">sequenceDiagram
A->>B: How are you?
B->>A: Great!</pre>
<!--SR:!2022-11-15,64,250-->
<p><strong>mermaid 甘特图</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gantt</span><br><span class="line">dateFormat YYYY-MM-DD</span><br><span class="line"></span><br><span class="line">section S1</span><br><span class="line">T1: 2014-01-01, 3d</span><br><span class="line"></span><br><span class="line">section S2</span><br><span class="line">T2: 2014-01-11, 6d</span><br><span class="line"></span><br><span class="line">section S3</span><br><span class="line">T3: 2014-01-02, 9d</span><br></pre></td></tr></table></figure>
<pre class="mermaid">gantt
dateFormat YYYY-MM-DD

section S1
T1: 2014-01-01, 3d

section S2
T2: 2014-01-11, 6d

section S3
T3: 2014-01-02, 9d</pre>
<!--SR:!2022-10-11,40,250-->
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.4.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.4.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>9.输出</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>test</tag>
        <tag>obsidian</tag>
        <tag>markdown</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>flask 参数传递的4种方式</title>
    <url>/522/</url>
    <content><![CDATA[<blockquote>
<p>原文地址 <a
href="http://h3blog.com/article/flask-params/">h3blog.com</a></p>
</blockquote>
<h2 id="get-方式传参">get 方式传参</h2>
<p>代码： <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># get方式传参数</span></span><br><span class="line"><span class="meta">@app.route(&#x27;/name&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getName</span>():</span></span><br><span class="line">    name = request.args.get(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;hello,&#123;&#125;&#x27;</span>.format(name)</span><br><span class="line">    </span><br></pre></td></tr></table></figure> 测试 curl
http://127.0.0.1:5000/name?name=www.h3blog.com <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ curl -i -X GET http://127.0.0.1:5000/name?name=www.h3blog.com</span><br></pre></td></tr></table></figure></p>
<p>response: <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hello,www.h3blog.com</span><br></pre></td></tr></table></figure> <!--SR:!2022-11-24,51,250--></p>
<h2 id="post-方式传参">post 方式传参</h2>
<p>代码 <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># post方式传参数</span></span><br><span class="line"><span class="meta">@app.route(&#x27;/name&#x27;,methods=[&#x27;POST&#x27;])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">postName</span>():</span></span><br><span class="line">    name = request.form.get(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;hello,&#123;&#125;&#x27;</span>.format(name)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&quot;/post_address_nft&quot;, methods=[&#x27;POST&#x27;])  </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">post_address_nft</span>():</span>  </span><br><span class="line">	addresses = flask.request.values.get(<span class="string">&#x27;address_list&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">	</span><br></pre></td></tr></table></figure> 测试 curl http://127.0.0.1:5000/name
<strong>-d</strong> 'name=www.h3blog.com' <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ curl -X POST http://127.0.0.1:5000/name -d <span class="string">&#x27;name=www.h3blog.com&#x27;</span> -i</span><br></pre></td></tr></table></figure></p>
<p>response: <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hello,www.h3blog.com</span><br></pre></td></tr></table></figure> <!--SR:!2022-11-28,54,250--></p>
<h2 id="url-路径传参">url 路径传参</h2>
<p>代码 <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;hello,world&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># url路径参数</span></span><br><span class="line"><span class="meta">@app.route(&#x27;/name/&lt;name&gt;&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">urlName</span>(<span class="params">name</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;hello,&#123;&#125;&#x27;</span>.format(name)</span><br></pre></td></tr></table></figure> 测试 <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ curl -X GET http://127.0.0.1:5000/name/www.h3blog.com -i</span><br></pre></td></tr></table></figure></p>
<p>response: <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hello,www.h3blog.com</span><br></pre></td></tr></table></figure> <!--SR:!2022-11-14,42,250--></p>
<h2 id="json-body-传参">json body 传参</h2>
<p>代码 <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;hello,world&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ajax body json</span></span><br><span class="line"><span class="meta">@app.route(&#x27;/json&#x27;,methods=[&#x27;POST&#x27;])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">json_body</span>():</span></span><br><span class="line">    data = request.get_data(as_text=<span class="literal">True</span>)</span><br><span class="line">    print(data)</span><br><span class="line">    jsonObj = json.loads(data)</span><br><span class="line">    <span class="keyword">return</span> jsonify(jsonObj)</span><br></pre></td></tr></table></figure> 测试 curl <code>url</code> <strong>-H</strong>
<code>'Content-Type:application/json'</code> <strong>-d</strong>
<code>'json_string'</code> <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ curl -X POST -H <span class="string">&#x27;Content-Type:application/json&#x27;</span> http://127.0.0.1:5000/json -d <span class="string">&#x27;&#123;&quot;name&quot;:&quot;www.h3blog.com&quot;&#125;&#x27;</span> -i</span><br></pre></td></tr></table></figure></p>
<p>response: <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;www.h3blog.com&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> <!--SR:!2022-11-28,54,250--></p>
<h2 id="flask-传参汇总">Flask 传参汇总</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;hello,world&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get方式传参数</span></span><br><span class="line"><span class="meta">@app.route(&#x27;/name&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getName</span>():</span></span><br><span class="line">    name = request.args.get(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;hello,&#123;&#125;&#x27;</span>.format(name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># post方式传参数</span></span><br><span class="line"><span class="meta">@app.route(&#x27;/name&#x27;,methods=[&#x27;POST&#x27;])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">postName</span>():</span></span><br><span class="line">    name = request.form.get(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;hello,&#123;&#125;&#x27;</span>.format(name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># url路径参数</span></span><br><span class="line"><span class="meta">@app.route(&#x27;/name/&lt;name&gt;&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">urlName</span>(<span class="params">name</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;hello,&#123;&#125;&#x27;</span>.format(name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ajax body json</span></span><br><span class="line"><span class="meta">@app.route(&#x27;/json&#x27;,methods=[&#x27;POST&#x27;])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">json_body</span>():</span></span><br><span class="line">    data = flask.request.get_json()</span><br><span class="line">    print(data)</span><br><span class="line">    jsonObj = json.loads(data)</span><br><span class="line">    <span class="keyword">return</span> jsonify(jsonObj)</span><br></pre></td></tr></table></figure>
<!--SR:!2022-11-28,54,250-->
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.4.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.4.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>4.技能</category>
        <category>编程语言</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>srcard</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>JS == 和 === 的区别</title>
    <url>/516/</url>
    <content><![CDATA[<h2 id="区别">区别</h2>
<p>在 JS 项目里，除了能看到 ==
操作符来判断两个变量是否相等外，我们还会看到 ===
操作符，这两者有什么区别？</p>
<ul>
<li>对于 String, number 这些<strong>值类型</strong>，<code>==</code>
操作符会先把两边的变量<mark style="background: #fefe00A6;">进行类型强制转换成相同的类型再比较是否相等</mark>
；<code>===</code> 操作符则不会进行类型转换，而是直接进行比较。</li>
<li>对于 array, object 这些<strong>引用类型</strong>，<code>==</code> 和
<code>===</code>
是没有区别的，因为它们<mark style="background: #fefe00A6;">比较的是
“指针地址</mark> ” 。</li>
<li><strong>值类型和引用类型之间</strong>比较，<code>==</code> 和
<code>===</code>
是有区别的；<code>==</code>操作符会<mark style="background: #fefe00A6;">先把高级类型转换为基础类型</mark>
之后，进行值的比较；<code>===</code>
操作符则不会进行转换，类型不同，直接返回 false</li>
</ul>
<p>也就是说，<code>==</code>
操作符只要求比较<mark style="background: #83d98fA6;">两个变量的值是否相等</mark>
，<code>===</code>
操作符则是要求<mark style="background: #83d98fA6;">两个变量的值和类型都要相同</mark>
；类似地，<code>!=</code> 操作符会去做类型强制转换，<code>!==</code>
操作符则不会转换类型。</p>
<p><strong>值类型</strong> <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> b = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(a == b);</span><br><span class="line"><span class="built_in">console</span>.log(a === b);</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p><strong>引用类型</strong> <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;*********************************&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> a = &#123;<span class="attr">val</span>:<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">let</span> b = &#123;<span class="attr">val</span>:<span class="number">1</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(a==b);</span><br><span class="line"><span class="built_in">console</span>.log(a===b);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;*********************************&quot;</span>);</span><br><span class="line">c = a;</span><br><span class="line"><span class="built_in">console</span>.log(a==c);</span><br><span class="line"><span class="built_in">console</span>.log(a===c);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<!--SR:!2022-10-31,22,250--></p>
<h2 id="注意事项">注意事项</h2>
<p><mark style="background: #fa518dA6;">JS == / ===注意事项: </mark></p>
<ul>
<li>对于特殊值 NaN（Not a Number）表示非数字，NaN
和任何数（包括它自己）做相等比较，都会返回
false，所以<mark style="background: #83d98fA6;">判断 NaN 最好用 isNaN()
函数</mark></li>
<li>undefined 和 null，两者的值相比较，会返回 true。 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="literal">undefined</span>==<span class="literal">null</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">undefined</span>===<span class="literal">null</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li>由于 == 和!=
操作符带来的类型隐式转换规则非常繁琐，还有为了避免数据类型混淆导致出现
bug，还是推荐使用 <code>===</code> 操作符和<code>!==</code> 操作符。
<!--SR:!2022-11-05,27,250--></li>
</ul>
<h2 id="stack-overflow-相关">Stack Overflow 相关</h2>
<p>So there you have the two common sources of errors in Javascript
comparisons: 1. comparing different types with == can lead to
==unexpected type conversions.== 2. comparing objects and arrays is
based on ==references not values stored inside==.</p>
<p>As the existing answer already says, Typescript is designed as a
superset of Javascript. So it doesn't change the behaviour of these
comparison operators. If you write <code>==</code> in Typescript, you
get type conversions.</p>
<p>So how is this fixed? ==With the compiler. ==If you actually do write
code that compares incompatible types with <code>==</code> it's a
compiler error. Try compiling the following sample:<br />
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> num = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(str==num);</span><br></pre></td></tr></table></figure>
<!--SR:!2022-11-02,24,250!2022-11-03,25,250!2022-11-06,28,250--></p>
<p><strong>参考:</strong></p>
<p><a href="https://nowjava.com/article/44330">nowjava.com</a></p>
<p><a
href="https://stackoverflow.com/questions/57125700/why-use-triple-equal-in-typescript">javascript
- Why use triple-equal (<code>===</code>) in TypeScript? - Stack
Overflow</a></p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.4.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.4.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>4.技能</category>
        <category>编程语言</category>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>srcard</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>深入浅出 python 闭包</title>
    <url>/542/</url>
    <content><![CDATA[<blockquote>
<p>原文地址 <a
href="https://zhuanlan.zhihu.com/p/22229197">zhuanlan.zhihu.com</a></p>
</blockquote>
<p>周围有些同事初学 python，往往对 python 的一些高级特性，比如生成器
(Generator), 闭包(closure)，装饰器(Decorator)
感到有点不太容易理解，虽然这些特性并非 python
独有，但真的掌握了一定会让你感觉原来生活如此美好。</p>
<h2 id="闭包介绍">1. 闭包介绍</h2>
<p>闭包概念：在一个内部函数中，对外部作用域的变量进行引用，(并且一般外部函数的返回值为内部函数)，那么内部函数就被认为是闭包。举个栗子先：</p>
<p><img
src="https://pic3.zhimg.com/0bf070da6fba4187510d4f423f451dd2_b.png" /><img
src="https://pic4.zhimg.com/564bc6ce56fc4cf2bf5128cd6c60b477_b.png" /><img
src="https://pic1.zhimg.com/dee4a1e824a6da024b5eace407eeab90_r.jpg" /><img
src="https://pic1.zhimg.com/f54f1765811dd5c13f415ec25cf2072c_b.png" /><img
src="https://pic2.zhimg.com/5ea23ecb27f7aa70eff3b6e445093f31_b.png" /></p>
<h2 id="常见错误">2. 常见错误</h2>
<h3
id="闭包无法修改外部函数的局部变量">闭包无法修改外部函数的局部变量</h3>
<p><img
src="https://pic1.zhimg.com/37066f1c440ecf7a31f685728119cfa8_r.jpg" />
这个是什么意思呢？ 如果 innerFunc 可以修改 x 的值的话，x
的值前后会发生变化，但结果是：</p>
<p><img
src="https://pic3.zhimg.com/a7d6feca997ecb0262aaa2875a77c4fa_b.png" /></p>
<h3 id="python-循环中不包含域的概念">python 循环中不包含域的概念</h3>
<p><img
src="https://pic3.zhimg.com/0c44b9dee2b981816d4137a432c4185e_b.png" /></p>
<p>按照大家正常的理解，应该输出的是 0, 2, 4 对吧？但实际输出的结果是: 4,
4, 4. 原因是什么呢？loop 在 python 中是没有域的概念的，flist
在像列表中添加 func 的时候，并没有保存 i 的值，而是当执行 f(2)
的时候才去取，这时候循环已经结束，i 的值是 2，所以结果都是 4。</p>
<p>其实修改方案也挺简单的：</p>
<p><img
src="https://pic1.zhimg.com/b61fccab921e91f626fb0488a0bace5c_r.jpg" /></p>
<h2 id="闭包的作用">3. 闭包的作用</h2>
<p>闭包可以保存当前的运行环境，以一个类似棋盘游戏的例子来说明。假设棋盘大小为
50*50，左上角为坐标系原点 (0,0)，我需要一个函数，接收 2
个参数，分别为方向 (direction)，步长 (step)，该函数控制棋子的运动。
这里需要说明的是，每次运动的起点都是上次运动结束的终点。</p>
<p>参考代码：</p>
<p><img
src="https://pic3.zhimg.com/9ce54b9dd939bb31e18923e7b3618d42_b.png" /><img
src="https://pic3.zhimg.com/dcbee56a8bcc7d164dddd39d68ee80b6_b.png" /></p>
<p>当然，闭包在爬虫以及 web
应用中都有很广泛的应用，并且闭包也是装饰器的基础，这些内容笔者会在后续的文章中分别介绍，这里就不多谈了。理解了本文中的概念，你应该知道的关于闭包的知识也差不多了，请在自己的编程中尽情使用吧。</p>
<p><strong>参考连接</strong>：</p>
<ol type="1">
<li><p><a
href="https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Closure_%28computer_programming%29">Closure
(computer programming)</a></p></li>
<li><p><a
href="https://link.zhihu.com/?target=http%3A//stackoverflow.com/questions/11408515/about-python-closure">About
python closure</a></p></li>
<li><p><a
href="https://link.zhihu.com/?target=http%3A//www.jb51.net/article/54498.htm">Python
中的闭包实例详解_python_脚本之家</a></p></li>
</ol>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.4.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.4.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>4.技能</category>
        <category>编程语言</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>说说 Python 的命名规范</title>
    <url>/545/</url>
    <content><![CDATA[<blockquote>
<p>原文地址 <a
href="https://mp.weixin.qq.com/s?src=11×tamp=1658813253&amp;ver=3943&amp;signature=rCEdWJcul585rSrw*vj*31qqKuqpuyjfoKsndxF88l6GQJ2nYUFoeIaXuil-zzPuDJx1HpltWSNMqT0hSJRkWO4MvJTiW4uipN7*uN2rpgW2MPfTIMNuW4k2D0SeknEl&amp;new=1">mp.weixin.qq.com</a></p>
</blockquote>
<p>命名规范在编写代码中起到很重要的作用，虽然不遵循命名规范，程序可能也可以运行，但是使用命名规范可以更加直观地了解代码所代表的含义。</p>
<p>Python 的命名规范（其它编程语言也差不多）</p>
<ol type="1">
<li>不能以数字开头，不能出现中文。</li>
<li>命名以字母开头，包含数字，字母（区分大小写），下划线。</li>
<li>不能包含关键字。</li>
</ol>
<p>下面具体说说 Python 的命名规范:</p>
<h2 id="类">1.类</h2>
<p><strong>python 类命名规则?</strong></p>
<p><mark style="background: #be9affA6;">类</mark>
<mark style="background: #018bffA6;">项目</mark>
<mark style="background: #fefe00A6;">异常</mark>
的命名遵循<strong>大驼峰</strong>规则,
单词首字母总是大写，私有类可以下划线开头。如: <code>MyClass</code>。
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span>()：</span></span><br><span class="line"><span class="class">  <span class="title">pass</span></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">MySchool</span>()：</span></span><br><span class="line"><span class="class">  <span class="title">pass</span></span></span><br></pre></td></tr></table></figure> <!--SR:!2022-11-08,63,250--></p>
<h2 id="函数">2.函数</h2>
<p><strong>Python 函数命名规则?</strong></p>
<p>函数名<strong>一律小写</strong>，<mark style="background: #fefe00A6;">若有多个单词用下划线隔开</mark>
。另外，<mark style="background: #fefe00A6;">私有函数下划线开头</mark>
。 <mark style="background: #be9affA6;">文件</mark>
<mark style="background: #018bffA6;">包</mark>
<mark style="background: #fefe00A6;">模块</mark>
<mark style="background: #57e8b8A6;">函数方法</mark>
<mark style="background: #83d98fA6;">变量</mark> 的命名规则是一样的:
<mark style="background: #83d98fA6;">全小写 + 下划线</mark> 如:
<code>this_is_var</code> <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func</span>(<span class="params">var1, var2</span>):</span></span><br><span class="line">  <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_private_func</span>(<span class="params">var1, var2</span>):</span></span><br><span class="line">  <span class="keyword">pass</span></span><br></pre></td></tr></table></figure> <!--SR:!2022-11-14,70,250--></p>
<h2 id="变量">3.变量</h2>
<p><strong>Python 变量命名规则?</strong></p>
<ul>
<li><strong>变量</strong>名最好小写，若有多个使用下划线分开 。</li>
<li><strong>常量</strong>使用<mark style="background: #fefe00A6;">全大写</mark>
，多个单词使用下划线隔开 。 <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num = <span class="number">20</span></span><br><span class="line">this_is_a_variable = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">MAX_NUM = <span class="number">1000</span></span><br></pre></td></tr></table></figure>
<!--SR:!2022-11-11,68,250--></li>
</ul>
<p><strong>Python 命名规约?</strong></p>
<p><img
src="https://mmbiz.qpic.cn/mmbiz_png/IibUVnJ665WriaXQa5CcJ1j5qgLSB3nsDEn4yWicaNcbcIiaicvN6nb3dCtx3sxVaddqBgNbr2mZ0SvSoWPBLhom7aw/640?wx_fmt=png" />
<!--SR:!2022-10-25,57,250--></p>
<p><strong>额外补充：</strong></p>
<p><strong>1. 缩写</strong></p>
<p>命名应当尽量使用全拼写的单词，缩写的情况有如下两种： 1.
常用的缩写，如 XML.ID 等，在命名时也应只大写首字母，如 XmlParser。 2.
命名中含有长单词，对某个单词进行缩写。这时应使用约定成俗的缩写方式。</p>
<p>例如： function 缩写为 fn text 缩写为 txt object 缩写为 obj count
缩写为 cnt number 缩写为 num，等。</p>
<p><strong>2. 下划线</strong></p>
<p>一个前导下划线：表示非公有。 一个后缀下划线：避免关键字冲突。</p>
<p>两个前导下划线：当命名一个类属性引起名称冲突时使用。
两个前导和后缀下划线：“magic”（有特殊用图）对象或者属性，例如__init__或者__file__。绝对不要创造这样的名字，而只是使用它们。</p>
<p>注意：关于下划线的使用存在一些争议。</p>
<p><strong>3. 特定命名方式</strong></p>
<p>主要是指 <code>__xxx__</code>
形式的系统保留字命名法。项目中也可以使用这种命名，它的意义在于这种形式的变量是只读的，这种形式的类成员函数尽量不要重载。如</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span>(<span class="params">object</span>):</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, id, parent = None</span>):</span></span><br><span class="line"></span><br><span class="line">self.__id__ = id</span><br><span class="line"></span><br><span class="line">self.__parent__ = parent</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__message__</span>(<span class="params">self, msgid</span>):</span></span><br></pre></td></tr></table></figure>
<p>其中 <strong>id</strong>.<code>__parent__</code> 和
<code>__message__</code> 都采用了系统保留字命名法。</p>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js"></script><script type="text/javascript" src="https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text/javascript" src="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.4.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.4.0/dist/mindmap.min.css">]]></content>
      <categories>
        <category>4.技能</category>
        <category>编程语言</category>
        <category>Python</category>
      </categories>
      <tags>
        <tag>srcard</tag>
        <tag>python</tag>
      </tags>
  </entry>
</search>
